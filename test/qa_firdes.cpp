#include <gnuradio-4.0/packet-modem/firdes.hpp>
#include <boost/ut.hpp>
#include <cmath>

boost::ut::suite FirdesTests = [] {
    using namespace boost::ut;
    using namespace gr::packet_modem;

    "root_raised_cosine"_test = [] {
        // obtained with GR3 firdes.root_raised_cosine(1.0, 4.0, 1.0, 0.35, 65)
        const std::vector<float> expected_taps = {
            0.0007716506370343268,   -0.00010189539170823991, -0.0009797688107937574,
            -0.0009425065363757312,  6.526567449327558e-05,   0.0010589363519102335,
            0.0009387789759784937,   -0.0003206657129339874,  -0.0014650109224021435,
            -0.001123489229939878,   0.0006878690328449011,   0.0022985078394412994,
            0.0018765591084957123,   -0.000594727520365268,   -0.002908049151301384,
            -0.0025688970927149057,  0.0005109973717480898,   0.0033316637855023146,
            0.0023942426778376102,   -0.0023884151596575975,  -0.006366472225636244,
            -0.0036955634132027626,  0.006406821776181459,    0.016343938186764717,
            0.014286679215729237,    -0.005520807113498449,   -0.03380724415183067,
            -0.0471808984875679,     -0.021182727068662643,   0.05174262449145317,
            0.15201632678508759,     0.23939631879329681,     0.2740399241447449,
            0.23939631879329681,     0.15201632678508759,     0.05174262449145317,
            -0.021182727068662643,   -0.0471808984875679,     -0.03380724415183067,
            -0.005520807113498449,   0.014286679215729237,    0.016343938186764717,
            0.006406821776181459,    -0.0036955634132027626,  -0.006366472225636244,
            -0.0023884151596575975,  0.0023942426778376102,   0.0033316637855023146,
            0.0005109973717480898,   -0.0025688970927149057,  -0.002908049151301384,
            -0.000594727520365268,   0.0018765591084957123,   0.0022985078394412994,
            0.0006878690328449011,   -0.001123489229939878,   -0.0014650109224021435,
            -0.0003206657129339874,  0.0009387789759784937,   0.0010589363519102335,
            6.526567449327558e-05,   -0.0009425065363757312,  -0.0009797688107937574,
            -0.00010189539170823991, 0.0007716506370343268
        };
        constexpr auto num_taps = 65_ul;
        expect(eq(expected_taps.size(), num_taps));
        const auto taps = firdes::root_raised_cosine(
            1.0, 4.0, 1.0, 0.35, static_cast<size_t>(num_taps));
        expect(eq(taps.size(), num_taps));
        const float tolerance = 1e-7f;
        for (size_t j = 0; j < taps.size(); ++j) {
            expect(std::abs(taps[j] - expected_taps[j]) < tolerance);
        }
    };
};

int main() {}
